# 1. 계단을 오를 때 한 계단 또는 두 계단 오를 수 있음 => 2가지 경우
# 2. 연속된 세 개의 계단을 모두 밟아서는 안됨 => 연속된 두 개의 계단을 밟았으면 다음 다음 계단을 밟아라
# 3. 마지막 계단은 무조건 밟아
# 4. 첫번 째 계단은 무조건 밟아야 함, 두번 째 계단의 최대값은 첫번 째 계단을 더한 값 => DP = [0, 첫번째 계단의 점수, 첫번째 계단의 점수 + 두번째 계단 점수]
# 5. 해당 계단을 밟을 때 두 가지 경우(n >= 3, 세 번째 계단) 중에 큰 값을 저장
# 6. 해당 계단에 있어 이전 계단을 밟는 경우, 전전계단을 밟는 경우
# 7. 이중 리스트를 통해 첫번 째 아이템에는 이전 item을 더한 값(연속 됨), 두번 째 아이템에는 이전전 item을 더한 값(연속 되지 않음)

N = int(input())
number_lst = [0] + [int(input()) for _ in range(N)]
dp = [[0, 0], [number_lst[1], number_lst[1]]]

for idx in range(2, N + 1):
    dp.append([number_lst[idx] + dp[idx - 1][1], number_lst[idx] + max(dp[idx - 2])])

print(max(dp[-1]))